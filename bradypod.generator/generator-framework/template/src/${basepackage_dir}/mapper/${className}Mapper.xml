<#include "/macro.include"/>
<#assign className = table.className>
<#assign classNameFirstLower = table.classNameFirstLower>   
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<#macro mapperEl value>${r"#{"}${value}}</#macro>
<#macro namespace>${className}.</#macro>

<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="${basepackage}.mapper.${className}Mapper">

	<!-- <resultMap id="${className}" type="${basepackage}.po.${className}"> <#list table.columns as column> 
		<result property="${column.columnNameLower}" column="${column.sqlName}"/> </#list> </resultMap> -->

	<!-- 用于select查询公用抽取的列 -->
	<sql id="select_columns">
	    <![CDATA[
		<#list table.columns as column>${column.sqlName}<#if column_has_next>,</#if></#list>
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="save" useGeneratedKeys="true" keyProperty="${table.idColumn.columnNameFirstLower}">
    <![CDATA[
        INSERT INTO ${table.sqlName} (
        <#list table.columns as column>
        	${column.sqlName} <#if column_has_next>,</#if>
        </#list>
        ) VALUES (
        <#list table.columns as column>
        	<@mapperEl column.columnNameFirstLower/> <#if column_has_next>,</#if>
        </#list>        
        )
    ]]>
	</insert>

	<update id="update">
    <![CDATA[
        UPDATE ${table.sqlName} SET
	        <#list table.notPkColumns as column>
	        ${column.sqlName} = <@mapperEl column.columnNameFirstLower/> <#if column_has_next>,</#if>
	        </#list>
        WHERE 
        	<#list table.compositeIdColumns as column>
	        ${column.sqlName} = <@mapperEl column.columnNameLower/> <#if column_has_next>,</#if>
	        </#list>	        
    ]]>
	</update>

	<delete id="delete">
    <![CDATA[
        DELETE FROM ${table.sqlName} WHERE
        <#list table.compositeIdColumns as column>
        ${column.sqlName} = <@mapperEl 'id'/> <#if column_has_next>,</#if>
		</#list>
    ]]>
	</delete>

	<select id="get" resultType="${className}">
		SELECT
		<include refid="select_columns" />
	    <![CDATA[
		    FROM ${table.sqlName} 
	        WHERE 
				<#list table.compositeIdColumns as column>
		        ${column.sqlName} = <@mapperEl 'id'/> <#if column_has_next>,</#if>
		        </#list> 
	    ]]>
	</select>

	<sql id="find_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args) -->
		<where>
			<#list table.columns as column>
			<#if column.isDateTimeColumn>
			<if test="@Ognl@isNotEmpty(${column.columnNameFirstLower}Begin)">
				AND ${column.sqlName} >= <@mapperEl column.columnNameFirstLower+"Begin"/>
			</if>
			<if test="@Ognl@isNotEmpty(${column.columnNameFirstLower}End)">
				AND ${column.sqlName} &lt;= <@mapperEl column.columnNameFirstLower+"End"/>
			</if>
			<#else>
			<if test="@Ognl@isNotEmpty(${column.columnNameFirstLower})">
				AND ${column.sqlName} = <@mapperEl column.columnNameFirstLower/>
			</if>
			</#if>
			</#list>
		</where>
	</sql>

	<sql id="pageLimit">
		limit <@mapperEl "pageNO"/>, <@mapperEl "pageSize"/>
	</sql>

	<select id="countData" resultType="long">
		SELECT count(1) FROM ${table.sqlName}
		<include refid="find_where" />
		<include refid="pageLimit" />
	</select>

	<select id="listData" resultType="${className}">
		SELECT
		<include refid="select_columns" />
		FROM ${table.sqlName}
		<include refid="find_where" />

		<if test="@Ognl@isNotEmpty(sort)">
			ORDER BY <@jspEl 'sort'/>
		</if>
	</select>

	<#list table.columns as column>
	<#if column.unique && !column.pk>
	<select id="getBy${column.columnName}" resultType="${className}" parameterType="${column.javaType}">
		SELECT
		<include refid="select_columns" />
	    <![CDATA[
	        FROM ${table.sqlName} where ${column.sqlName} = <@mapperEl column.columnNameLower/>
	    ]]>
	</select>

	</#if>
	</#list>

</mapper>